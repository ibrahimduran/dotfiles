#!/bin/env bash

set -e

DOTFILES_DIR="${DOTFILES_DIR:-"$HOME/.local/dotfiles"}"
DOTFILES_CMD="${DOTFILES_CMD:-"$DOTFILES_DIR/.local/bin/dotfiles"}"

install() {
    if [ $# -eq 1 ]; then
        find $DOTFILES_DIR -type f -not -path "$DOTFILES_DIR/.git*" -exec $DOTFILES_CMD install {} \;
    else
        for ((i=2; i<=$#; i++))
        do
            source="${!i}"
            source=$(readlink -f $source)
            name="${source/#$DOTFILES_DIR\//}"
            target="${HOME}/${name}"

            if [[ "${source}" != $DOTFILES_DIR/* ]]; then
                echo "${source} is not inside dotfiles directory!"
                exit 1
            fi

            mkdir -p $(dirname $target)
            cp $source $target
            echo "Installing ${name}"
        done
    fi
}

update() {
    if [ $# -eq 1 ]; then
        find $DOTFILES_DIR -type f -not -path "$DOTFILES_DIR/.git*" -exec $DOTFILES_DIR/update.sh {} \;
        echo "Done updating files, you can commit changes now."
    else
        for ((i=2; i<=$#; i++))
        do
            path="${!i}"
            path=$(readlink -f $path)

            if [[ "${path}" != $HOME/* ]]; then
                if [[ "${path}" != $DOTFILES_DIR/* ]]; then
                    echo "${!i} is not inside home directory!"
                    exit 1
                fi
            fi
        done

        for ((i=2; i<=$#; i++))
        do
            path=$(readlink -f ${!i})

            if [[ "${path}" = $DOTFILES_DIR/* ]]; then
                source="${path/#$DOTFILES_DIR/$HOME}"
                target="${path}"
            else
                source="${path}"
                target="${path/#$HOME/$DOTFILES_DIR}"
            fi

            if [[ -d "$source" ]]; then
                echo "dir"
                target="$(dirname $target)/"
            fi

            name="${source/#$HOME\//}"
            echo "Updating $name"
            mkdir -p $(dirname $target)
            cp -r $source $target
        done
    fi
}

self-update() {
    cp $DOTFILES_CMD $HOME/.local/bin/dotfiles
    echo "Re-installed dotfiles script."
    exit 0
}

if [ "$1" = "install" ]; then
    install "$@"
elif [ "$1" = "update" ]; then
    update "$@"
elif [ "$1" = "self-update" ]; then
    self-update "$@"
elif [ "$1" = "pwd" ]; then
    echo $DOTFILES_DIR
elif [ "$1" = "diff" ]; then
    git -C $DOTFILES_DIR diff
elif [ "$1" = "push" ]; then
    git -C $DOTFILES_DIR add $DOTFILES_DIR
    git -C $DOTFILES_DIR commit -m "Update"
    git -C $DOTFILES_DIR push origin master
else
    if [ -d "$DOTFILES_DIR" ]; then
        echo "Usage: dotfiles install|update|self-update|pwd|diff|push"
        exit 0
    fi

    while true; do
        msg="This will clone and install dotfiles into \"${DOTFILES_DIR}\", do you wish to continue? "
        read -p "$msg" -n 1 yn
        case $yn in
            [Yy]* ) echo ""; echo "Installing dotfiles..."; break;;
            [Nn]* ) echo ""; exit;;
            * ) echo $msg;;
        esac
    done

    mkdir -p $(dirname $DOTFILES_DIR)

    if [ "${DOTFILES_CLONE:-"ssh"}" = "ssh" ]; then
        git clone git@github.com:ibrahimduran/dotfiles.git $DOTFILES_DIR
    else
        git clone https://github.com/ibrahimduran/dotfiles.git $DOTFILES_DIR
    fi

    $DOTFILES_CMD install
fi
