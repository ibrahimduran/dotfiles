#!/bin/env bash

set -e

DOTFILES_DIR="${DOTFILES_DIR:-"$HOME/.local/dotfiles"}"
DOTFILES_CMD=$(readlink -f $0)

install() {
    if [ $# -eq 0 ]; then
        install $DOTFILES_DIR
    else
        for ((i=1; i<=$#; i++))
        do
            source="${!i}"
            source=$(readlink -f $source)

            if [[ "${source}" != $DOTFILES_DIR && "${source}" != $DOTFILES_DIR/* ]]; then
                echo "${source} is not inside dotfiles directory!"
                exit 1
            fi

            if [[ -d "$source" ]]; then
                find $source -type f -not -path "$DOTFILES_DIR/.git*" -exec $DOTFILES_CMD install {} \;
            else
                name="${source/#$DOTFILES_DIR\//}"
                target="${HOME}/${name}"
                current=$(readlink -f $target)

                # file already exists
                if [[ -e $target ]]; then
                    # file is a link
                    if [[ $current != $target ]]; then
                        # link is not correct
                        if [[ $current != $source ]]; then
                            echo "[Error] Link to different target already exists $target"
                        fi
                    else
                        echo "[Error] File already exists $target"
                    fi
                else
                    ln -s $source $target
                    echo "Linked $name"
                fi
            fi
        done
    fi
}

uninstall() {
    if [ $# -eq 0 ]; then
        uninstall $DOTFILES_DIR
    else
        for ((i=1; i<=$#; i++))
        do
            source="${!i}"
            source=$(readlink -f $source)

            if [[ "${source}" != $DOTFILES_DIR && "${source}" != $DOTFILES_DIR/* ]]; then
                echo "${source} is not inside dotfiles directory!"
                exit 1
            fi

            if [[ -d "$source" ]]; then
                find $source -type f -not -path "$DOTFILES_DIR/.git*" -exec $DOTFILES_CMD uninstall {} \;
            else
                name="${source/#$DOTFILES_DIR\//}"
                target="${HOME}/${name}"
                current=$(readlink -f $target)

                # file already exists
                if [[ -e $target ]]; then
                    # file is a link
                    if [[ $current != $target ]]; then
                        # link is not correct
                        if [[ $current != $source ]]; then
                            echo "[Error] Link to different target already exists $target"
                        else
                            unlink $target
                            echo "Unlinked $name"
                        fi
                    else
                        echo "[Error] File is not a link $target"
                    fi
                fi
            fi
        done
    fi
}

if [ "$1" = "install" ]; then
    install "${@:2}"
elif [ "$1" = "uninstall" ]; then
    uninstall "${@:2}"
elif [ "$1" = "pwd" ]; then
    echo $DOTFILES_DIR
elif [ "$1" = "diff" ]; then
    git -C $DOTFILES_DIR add $DOTFILES_DIR
    git -C $DOTFILES_DIR diff --cached "${@:2}"
elif [ "$1" = "push" ]; then
    git -C $DOTFILES_DIR add $DOTFILES_DIR
    git diff --cached --quiet && echo "No changes found." || {
        git -C $DOTFILES_DIR commit -m "Update"
        git -C $DOTFILES_DIR push origin master
    }
else
    if [ -d "$DOTFILES_DIR" ]; then
        echo "Usage: dotfiles install|uninstall|pwd|diff|push"
        exit 0
    fi

    tty -s && {
        while true; do
            msg="This will clone and install dotfiles into \"${DOTFILES_DIR}\", do you wish to continue? "
            read -p "$msg" -n 1 yn
            case $yn in
                [Yy]* ) echo ""; echo "Installing dotfiles..."; break;;
                [Nn]* ) echo ""; exit;;
                * ) echo $msg;;
            esac
        done
    } || {
        echo "Installing dotfiles..."
        sleep 3
    }

    mkdir -p $(dirname $DOTFILES_DIR)

    if [ "${GIT_USE_HTTP:-"0"}" = "0" ]; then
        git clone git@github.com:ibrahimduran/dotfiles.git $DOTFILES_DIR
    else
        git clone https://github.com/ibrahimduran/dotfiles.git $DOTFILES_DIR
    fi

    $DOTFILES_CMD install
fi
